//=============================================================================
// 
//  プレイヤー決め処理 [decideplayer.cpp]
//  Author : 相馬靜雅
// 
//=============================================================================
#include "decideplayer.h"
#include "input.h"
#include "fade.h"
#include "renderer.h"
#include "calculation.h"
#include "debugproc.h"
#include "decideplayer_screen.h"
#include "sound.h"

//==========================================================================
// 静的メンバ変数宣言
//==========================================================================

//==========================================================================
// コンストラクタ
//==========================================================================
CDecidePlayer::CDecidePlayer()
{
	// 値のクリア

}

//==========================================================================
// デストラクタ
//==========================================================================
CDecidePlayer::~CDecidePlayer()
{

}

//==========================================================================
// 初期化処理
//==========================================================================
HRESULT CDecidePlayer::Init(void)
{

	// BGM再生
	CManager::GetInstance()->GetSound()->PlaySound(CSound::LABEL_BGM_TITLE);

	// 初期化処理
	if (FAILED(CScene::Init()))
	{// 失敗した場合
		return E_FAIL;
	}

	// タイトル画面
	CDecidePlayerScreen::Create();

	// 成功
	return S_OK;
}

//==========================================================================
// 終了処理
//==========================================================================
void CDecidePlayer::Uninit(void)
{
	// 終了処理
	CScene::Uninit();
}

//==========================================================================
// 更新処理
//==========================================================================
void CDecidePlayer::Update(void)
{
	CManager::GetInstance()->GetDebugProc()->Print(
		"現在のモード：【人数決め】\n");

	// キーボード情報取得
	CInputKeyboard *pInputKeyboard = CManager::GetInstance()->GetInputKeyboard();

	// ゲームパッド情報取得
	CInputGamepad *pInputGamepad = CManager::GetInstance()->GetInputGamepad();

	if (CManager::GetInstance()->GetFade()->GetState() != CFade::STATE_NONE)
	{// フェード中は抜ける
		return;
	}
}

//==========================================================================
// 描画処理
//==========================================================================
void CDecidePlayer::Draw(void)
{

}
