//==========================================================================
//
// リスト構造の処理[list.cpp]
// Author：相馬靜雅
//
//==========================================================================
#include "list.h"

//==========================================================================
// マクロ定義
//==========================================================================

//==========================================================================
// 静的メンバ変数宣言
//==========================================================================

//==========================================================================
// コンストラクタ
//==========================================================================
CList::CList()
{
	// 値のクリア
	m_pPrev = NULL;		// 前のオブジェクトへのポインタ
	m_pNext = NULL;		// 次のオブジェクトへのポインタ

	m_bDeath = false;	// 死亡フラグ
}

//==========================================================================
// デストラクタ
//==========================================================================
CList::~CList()
{

}

//==========================================================================
// 生成処理
//==========================================================================
CList *CList::Create(void)
{
	// 生成用のオブジェクト
	CList *pList = NULL;

	if (pList == NULL)
	{// NULLだったら

		// メモリの確保
		pList = DEBUG_NEW CList;

		// 初期化処理
		pList->Init();

		return pList;
	}

	return NULL;
}


//==========================================================================
// 初期化処理
//==========================================================================
HRESULT CList::Init(void)
{

	return S_OK;
}

//==========================================================================
// 終了処理
//==========================================================================
void CList::Uninit(void)
{

}

//==========================================================================
// 更新処理
//==========================================================================
void CList::Update(void)
{

}

//==========================================================================
// 描画処理
//==========================================================================
void CList::Draw(void)
{
	
}

//==========================================================================
// オブジェクトの死亡判定
//==========================================================================
void CList::Release(void)
{
	// 死亡フラグを立てる
	CObject::Release();
	//delete this;

}

//==========================================================================
// 次のオブジェクト設定
//==========================================================================
void CList::SetNext(CList* pNext)
{ 
	m_pNext = pNext;
}

//==========================================================================
// 次のオブジェクト取得
//==========================================================================
CList *CList::GetNext(void)
{ 
	return m_pNext;
}

//==========================================================================
// 前のオブジェクト設定
//==========================================================================
void CList::SetPrev(CList* pPrev)
{ 
	m_pPrev = pPrev;
}

//==========================================================================
// 前のオブジェクト取得
//==========================================================================
CList *CList::GetPrev(void)
{ 
	return m_pPrev;
}

//==========================================================================
// 死亡判定取得
//==========================================================================
bool CList::IsDeath(void)
{ 
	return m_bDeath;
}
