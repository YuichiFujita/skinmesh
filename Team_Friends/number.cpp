//=============================================================================
// 
//  数字処理 [number.cpp]
//  Author : 相馬靜雅
// 
//=============================================================================
#include "number.h"

// 派生先
#include "number_2D.h"
#include "number_Billboard.h"

//==========================================================================
// マクロ定義
//==========================================================================

//==========================================================================
// 静的メンバ変数宣言
//==========================================================================

//==========================================================================
// コンストラクタ
//==========================================================================
CNumber::CNumber(int nPriority)
{
	// 値のクリア
	m_objType = OBJECTTYPE_2D;	// オブジェクトの種類
}

//==========================================================================
// デストラクタ
//==========================================================================
CNumber::~CNumber()
{

}

//==========================================================================
// 生成処理
//==========================================================================
CNumber *CNumber::Create(EObjectType objtype, int nPriority)
{
	// 生成用のオブジェクト
	CNumber *pNumber = NULL;

	if (pNumber == NULL)
	{// NULLだったら

		// メモリの確保
		switch (objtype)
		{
		case CNumber::OBJECTTYPE_2D:
			pNumber = DEBUG_NEW CNumber2D;
			break;

		case CNumber::OBJECTTYPE_BILLBOARD:
			pNumber = DEBUG_NEW CNumberBillboard;
			break;

		default:
			return NULL;
			break;
		}

		if (pNumber != NULL)
		{// メモリの確保が出来ていたら

			// オブジェクトの種類
			pNumber->m_objType = objtype;

			// 初期化処理
			pNumber->Init(nPriority);
		}
		else
		{
			delete pNumber;
			pNumber = NULL;
		}

		return pNumber;
	}

	return NULL;
}

//==========================================================================
// 位置設定
//==========================================================================
void CNumber::SetPosition(const D3DXVECTOR3 pos)
{
}

//==========================================================================
// 位置取得
//==========================================================================
D3DXVECTOR3 CNumber::GetPosition(void) const
{
	return mylib_const::DEFAULT_VECTOR3;
}

//==========================================================================
// 移動量設定
//==========================================================================
void CNumber::SetMove(const D3DXVECTOR3 move)
{
}

//==========================================================================
// 移動量取得
//==========================================================================
D3DXVECTOR3 CNumber::GetMove(void) const
{
	return mylib_const::DEFAULT_VECTOR3;
}

//==========================================================================
// 向き設定
//==========================================================================
void CNumber::SetRotation(const D3DXVECTOR3 rot)
{
}

//==========================================================================
// 向き取得
//==========================================================================
D3DXVECTOR3 CNumber::GetRotation(void) const
{
	return mylib_const::DEFAULT_VECTOR3;
}

//==========================================================================
// 色設定
//==========================================================================
void CNumber::SetColor(const D3DXCOLOR col)
{
}

//==========================================================================
// 色取得
//==========================================================================
D3DXCOLOR CNumber::GetColor(void) const
{
	return mylib_const::DEFAULT_COLOR;
}

//==========================================================================
// サイズ設定
//==========================================================================
void CNumber::SetSize(const D3DXVECTOR2 size)
{
}

//==========================================================================
// サイズ取得
//==========================================================================
D3DXVECTOR2 CNumber::GetSize(void) const
{
	return D3DXVECTOR2(0.0f, 0.0f);
}

//==========================================================================
// 元のサイズの設定
//==========================================================================
void CNumber::SetSizeOrigin(const D3DXVECTOR2 size)
{
}

//==========================================================================
// 元のサイズの取得
//==========================================================================
D3DXVECTOR2 CNumber::GetSizeOrigin(void) const
{
	return D3DXVECTOR2(0.0f, 0.0f);
}

//==========================================================================
// テクスチャ座標設定
//==========================================================================
void CNumber::SetTex(D3DXVECTOR2 *tex)
{
}

//==========================================================================
// テクスチャ座標取得
//==========================================================================
D3DXVECTOR2 *CNumber::GetTex(void)
{
	return NULL;
}

//==========================================================================
// オブジェクト2Dオブジェクトの取得
//==========================================================================
CObject2D *CNumber::GetObject2D(void)
{
	return NULL;
}

//==========================================================================
// オブジェクトビルボードオブジェクトの取得
//==========================================================================
CObjectBillboard *CNumber::GetObjectBillboard(void)
{
	return NULL;
}